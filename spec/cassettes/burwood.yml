---
http_interactions:
- request:
    method: get
    uri: https://datracker.burwood.nsw.gov.au/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.5 Ruby/3.2.2p53 (http://github.com/sparklemotion/mechanize/)
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - datracker.burwood.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Found
    headers:
      Cache-Control:
      - no-cache, no-store
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Location:
      - "/Home/Disclaimer"
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=02xjm3hdhrfkn53brktdoiuw; path=/; HttpOnly; SameSite=Lax
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 28 Mar 2025 13:03:51 GMT
      Content-Length:
      - '133'
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"/Home/Disclaimer\">here</a>.</h2>\r\n</body></html>\r\n"
  recorded_at: Sun, 09 Feb 2025 13:00:00 GMT
- request:
    method: get
    uri: https://datracker.burwood.nsw.gov.au/Home/Disclaimer
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.5 Ruby/3.2.2p53 (http://github.com/sparklemotion/mechanize/)
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=02xjm3hdhrfkn53brktdoiuw
      Host:
      - datracker.burwood.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/10.0
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 28 Mar 2025 13:03:51 GMT
      Content-Length:
      - '13592'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 09 Feb 2025 13:00:00 GMT
- request:
    method: post
    uri: https://datracker.burwood.nsw.gov.au/Home/DisclaimerProcessing
    body:
      encoding: ASCII-8BIT
      string: agreed=true
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.5 Ruby/3.2.2p53 (http://github.com/sparklemotion/mechanize/)
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=02xjm3hdhrfkn53brktdoiuw
      Host:
      - datracker.burwood.nsw.gov.au
      Referer:
      - https://datracker.burwood.nsw.gov.au/Home/Disclaimer
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '11'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Cache-Control:
      - no-cache, no-store
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Location:
      - "/"
      Server:
      - Microsoft-IIS/10.0
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - User=accessAllowed-MasterView=True; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 28 Mar 2025 13:03:51 GMT
      Content-Length:
      - '118'
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"/\">here</a>.</h2>\r\n</body></html>\r\n"
  recorded_at: Sun, 09 Feb 2025 13:00:00 GMT
- request:
    method: get
    uri: https://datracker.burwood.nsw.gov.au/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.5 Ruby/3.2.2p53 (http://github.com/sparklemotion/mechanize/)
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=02xjm3hdhrfkn53brktdoiuw; User=accessAllowed-MasterView=True
      Host:
      - datracker.burwood.nsw.gov.au
      Referer:
      - https://datracker.burwood.nsw.gov.au/Home/Disclaimer
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/10.0
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 28 Mar 2025 13:03:51 GMT
      Content-Length:
      - '26775'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 09 Feb 2025 13:00:00 GMT
- request:
    method: post
    uri: https://datracker.burwood.nsw.gov.au/Application/GetApplications
    body:
      encoding: ASCII-8BIT
      string: start=0&length=100&json=%7B%22DateFrom%22%3A%2211%2F01%2F2025%22%2C%22DateTo%22%3A%2210%2F02%2F2025%22%2C%22DateType%22%3A%221%22%2C%22RemoveUndeterminedApplications%22%3Afalse%2C%22ShowOutstandingApplications%22%3Afalse%2C%22ShowExhibitedApplications%22%3Afalse%2C%22IncludeDocuments%22%3Afalse%7D
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.5 Ruby/3.2.2p53 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=02xjm3hdhrfkn53brktdoiuw; User=accessAllowed-MasterView=True
      Host:
      - datracker.burwood.nsw.gov.au
      Referer:
      - https://datracker.burwood.nsw.gov.au/
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '298'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store
      Pragma:
      - no-cache
      Content-Type:
      - application/json; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/10.0
      X-Aspnetmvc-Version:
      - '5.2'
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 28 Mar 2025 13:03:51 GMT
      Content-Length:
      - '10516'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 09 Feb 2025 13:00:00 GMT
recorded_with: VCR 6.3.1
